{
  "version": 3,
  "sources": [
    "logo.svg",
    "lookup/components.js",
    "tweets/lookup.js",
    "tweets/buttons.js",
    "profiles/components.js",
    "profiles/badge.js",
    "profiles/lookup.js",
    "tweets/detail.js",
    "tweets/list.js",
    "tweets/create.js",
    "tweets/feed.js",
    "tweets/components.js",
    "App.js",
    "serviceWorker.js",
    "index.js"
  ],
  "names": [
    "module",
    "exports",
    "backendLookup",
    "method",
    "endpoint",
    "callback",
    "data",
    "jsonData",
    "JSON",
    "stringify",
    "xhr",
    "XMLHttpRequest",
    "url",
    "responseType",
    "open",
    "setRequestHeader",
    "csrftoken",
    "name",
    "cookieValue",
    "document",
    "cookie",
    "cookies",
    "split",
    "i",
    "length",
    "trim",
    "substring",
    "decodeURIComponent",
    "getCookie",
    "onload",
    "status",
    "response",
    "detail",
    "window",
    "location",
    "href",
    "indexOf",
    "onerror",
    "e",
    "console",
    "log",
    "send",
    "apiTweetFeed",
    "nextUrl",
    "undefined",
    "replace",
    "apiTweetList",
    "username",
    "ActionBtn",
    "props",
    "tweet",
    "action",
    "didPerformAction",
    "likes",
    "className",
    "display",
    "type",
    "handleActionBackendEvent",
    "onClick",
    "event",
    "preventDefault",
    "id",
    "tweetId",
    "apiTweetAction",
    "UserLink",
    "children",
    "UserDisplay",
    "user",
    "includeFullName",
    "hideLink",
    "displayName",
    "first_name",
    "last_name",
    "Fragment",
    "UserPicture",
    "DisplayCount",
    "numeral",
    "format",
    "ProfileBadge",
    "didFollowToggle",
    "profileLoading",
    "currentStatus",
    "is_following",
    "followers_count",
    "following_count",
    "bio",
    "ProfileBadgeComponent",
    "useState",
    "didLookup",
    "setDidLookup",
    "profile",
    "setProfile",
    "setProfileLoading",
    "handleBackendLookup",
    "useEffect",
    "apiProfileDetail",
    "toLowerCase",
    "apiFollowToggle",
    "ParentTweet",
    "parent",
    "Tweet",
    "isRetweet",
    "hideActions",
    "retweeter",
    "didRetweet",
    "actionTweet",
    "setActionTweet",
    "match",
    "pathname",
    "urlTweetId",
    "groups",
    "tweetid",
    "isDetail",
    "handlePerformAction",
    "newActionTweet",
    "content",
    "TweetsList",
    "tweetsInit",
    "setTweetsInit",
    "tweets",
    "setTweets",
    "setNextUrl",
    "tweetsDidSet",
    "setTweetsDidSet",
    "final",
    "newTweet",
    "concat",
    "next",
    "results",
    "handleRetweet",
    "updateTweetsInit",
    "unshift",
    "updateFinalTweets",
    "map",
    "item",
    "index",
    "key",
    "newTweets",
    "alert",
    "TweetCreate",
    "textAreaRef",
    "React",
    "createRef",
    "didTweet",
    "handleBackendUpdate",
    "onSubmit",
    "newValue",
    "current",
    "value",
    "ref",
    "required",
    "TweetsFeedList",
    "TweetsComponent",
    "canTweet",
    "setNewTweets",
    "currentTweetList",
    "TweetDetailComponent",
    "setTweet",
    "apiTweetDetail",
    "App",
    "src",
    "logo",
    "alt",
    "Boolean",
    "hostname",
    "rootEle",
    "getElementById",
    "ReactDOM",
    "render",
    "StrictMode",
    "createElement",
    "tweetmeEle",
    "dataset",
    "tweetmeFeedEle",
    "querySelectorAll",
    "forEach",
    "container",
    "navigator",
    "serviceWorker",
    "ready",
    "then",
    "registration",
    "unregister",
    "catch",
    "error",
    "message"
  ],
  "mappings": "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",
  "file": "static/js/main.fbbddb1c.chunk.js",
  "sourcesContent": [
    "module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";",
    "function getCookie(name) {\n\tvar cookieValue = null;\n\tif (document.cookie && document.cookie !== '') {\n\t\tvar cookies = document.cookie.split(';');\n\t\tfor (var i = 0; i < cookies.length; i++) {\n\t\t\tvar cookie = cookies[i].trim();\n\t\t\t// Does this cookie string begin with the name we want?\n\t\t\tif (cookie.substring(0, name.length + 1) === (name + '=')) {\n\t\t\t\tcookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n\tlet jsonData;\n\tif (data) {\n\t\tjsonData = JSON.stringify(data);\n\t}\n\tconst xhr = new XMLHttpRequest();\n\tconst url = `http://localhost:8000/api${endpoint}`;\n\txhr.responseType = \"json\";\n\txhr.open(method, url);\n\txhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\tconst csrftoken = getCookie('csrftoken');\n\tif (csrftoken) {\n\t\t// xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\n\t\txhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\t\txhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\n\t}\n\txhr.onload = function () {\n\t\tif (xhr.status === 403) {\n\t\t\tconst detail = xhr.response.detail;\n\t\t\tif (detail === \"Authentication details were not provided\") {\n\t\t\t\tif (window.location.href.indexOf(\"login\") === -1) {\n\t\t\t\t\twindow.location.href = \"/login\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(xhr.response, xhr.status);\n\t};\n\txhr.onerror = function (e) {\n\t\tconsole.log(e);\n\t\tcallback({\"message\": \"Request failed\"}, 400)\n\t};\n\txhr.send(jsonData);\n}\n",
    "import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback) {\n    backendLookup('POST', '/tweets/create/', callback, {content: newTweet});\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n    backendLookup('POST', '/tweets/action/', callback, {id: tweetId, action: action});\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n    let endpoint = '/tweets/feed/';\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\n    }\n    backendLookup('GET', endpoint, callback, null);\n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n    let endpoint = '/tweets/';\n    if (username) {\n        endpoint = `/tweets/?username=${username}`;\n    }\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\n    }\n    backendLookup('GET', endpoint, callback, null);\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup('GET', `/tweets/${tweetId}/`, callback, null);\n}",
    "import React from \"react\";\nimport {apiTweetAction} from \"./lookup\";\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props;\n    const likes = tweet.likes ? tweet.likes : 0;\n    const className = props.className ? props.className : 'btn btn-primary btn-sm';\n    const display = action.type === 'like' ? `${likes} ${action.display}` : `${action.display}`;\n\n    const handleActionBackendEvent = (response, status) => {\n\t    console.log(response, status);\n\t    if ((status === 200 || status === 201) && didPerformAction) {\n\t    \tdidPerformAction(response, status);\n\t    }\n    };\n\n    const handleClick = (event) => {\n    \tevent.preventDefault();\n\t    console.log(tweet.id, action.type);\n    \tapiTweetAction(tweet.id, action.type, handleActionBackendEvent);\n    };\n    return <button className={className} onClick={handleClick}> {display} </button>\n}",
    "import React from \"react\";\n\nfunction UserLink(props) {\n\tconst {username} = props;\n\tconst handleUserLink = (event) => {\n\t\tevent.preventDefault();\n\t\twindow.location.href = `/profile/${username}`\n\t};\n\treturn <span className={'pointer'} onClick={handleUserLink}>\n\t\t{props.children}\n\t</span>\n}\n\nexport function UserDisplay(props) {\n\tconst {user, includeFullName, hideLink} = props;\n\tconst displayName = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\n\n\treturn <React.Fragment>\n\t\t{displayName}\n\t\t{hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n\t</React.Fragment>\n}\n\nexport function UserPicture(props) {\n\tconst {user, hideLink} = props;\n\n\treturn hideLink ? <span className={'mx-1 px-3 py-2 rounded-circle bg-dark text-white'}>\n\t\t\t\t    {user.username[0]}\n\t\t\t    </span> : <UserLink username={user.username}>\n\t\t\t\t<span className={'mx-1 px-3 py-2 rounded-circle bg-dark text-white'}>\n\t\t\t\t    {user.username[0]}\n\t\t\t    </span>\n\t</UserLink>\n}\n",
    "import React, {useEffect, useState} from \"react\";\nimport {apiFollowToggle, apiProfileDetail} from \"./lookup\";\nimport {UserDisplay, UserPicture} from \"./components\";\n\nimport numeral from 'numeral';\n\nfunction DisplayCount(props) {\n\treturn <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\n}\n\nfunction ProfileBadge(props) {\n\tconst {user, didFollowToggle, profileLoading} = props;\n\tlet currentStatus = user && user.is_following ? \"Unfollow\" : \"Follow\";\n\tcurrentStatus = profileLoading ? \"Loading...\" : currentStatus;\n\tconst handleFollowToggle = (event) => {\n\t\tevent.preventDefault();\n\t\tif (didFollowToggle && !profileLoading) {\n\t\t\tdidFollowToggle(currentStatus);\n\t\t}\n\t};\n\treturn user ? <div>\n\t\t<UserPicture user={user} hideLink={true} />\n\t\t<p><UserDisplay user={user} includeFullName={true} hideLink={true}/></p>\n\t\t<p><DisplayCount>{user.followers_count}</DisplayCount>{user.followers_count === 1 ? \"follower\" : \"followers\"}</p>\n\t\t<p><DisplayCount>{user.following_count}</DisplayCount>following</p>\n\t\t<p>{user.location}</p>\n\t\t<p>{user.bio}</p>\n\t\t<button className={'btn btn-primary'} onClick={handleFollowToggle}>{currentStatus}</button>\n\t</div> : null;\n}\n\nexport function ProfileBadgeComponent(props) {\n\tconst {username} = props;\n\tconst [didLookup, setDidLookup] = useState(false);\n\tconst [profile, setProfile] = useState(null);\n\tconst [profileLoading, setProfileLoading] = useState(false);\n\tconst handleBackendLookup = (response, status) => {\n\t\tif (status === 200) {\n\t\t\tsetProfile(response);\n\t\t}\n\t};\n\n\tconst handleNewFollow = (currentStatus) => {\n\t\tapiFollowToggle(username, currentStatus, (response, status) => {\n\t\t\t// console.log(response, status);\n\t\t\tif (status === 200) {\n\t\t\t\tsetProfile(response);\n\t\t\t}\n\t\t\tsetProfileLoading(false);\n\t\t});\n\t\tsetProfileLoading(true);\n\t};\n\n\tuseEffect(() => {\n\t\tif (didLookup === false) {\n\t\t\tapiProfileDetail(username, handleBackendLookup);\n\t\t\tsetDidLookup(true);\n\t\t}\n\t}, [username, didLookup, setDidLookup]);\n\treturn didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading}/> : null;\n}",
    "import {backendLookup} from \"../lookup\";\n\nexport function apiProfileDetail(username, callback) {\n    backendLookup('GET', `/profile/${username}/`, callback, null);\n}\n\nexport function apiFollowToggle(username, action, callback) {\n\tconst data = {action: `${action && action}`.toLowerCase()};\n    backendLookup('POST', `/profile/${username}/follow`, callback, data);\n}",
    "import React, {useState} from \"react\";\nimport {ActionBtn} from \"./buttons\";\nimport {UserDisplay, UserPicture} from \"../profiles\";\n\nexport function ParentTweet(props) {\n\tconst {tweet} = props;\n\treturn tweet.parent ? <Tweet isRetweet hideActions className={' '} tweet={tweet.parent} retweeter={props.retweeter}/> : null;\n}\n\nexport function Tweet(props) {\n    const {tweet, didRetweet, hideActions, isRetweet} = props;\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n    className = isRetweet === true ? `${className} p-2 border rounded` : className;\n    const path = window.location.pathname;\n\tconst match = path.match(/(?<tweetid>\\d+)/);\n\tconst urlTweetId = match ? match.groups.tweetid : -1;\n\n\n\tconst isDetail = `${tweet.id}` === `${urlTweetId}`;\n    const handleLinkClick = (event) => {\n    \tevent.preventDefault();\n    \twindow.location.href = `/${tweet.id}`\n    };\n\n    const handlePerformAction = (newActionTweet, status) => {\n    \tif (status === 200) {\n    \t    setActionTweet(newActionTweet);\n\t    } else if (status === 201) {\n\t\t\tdidRetweet(newActionTweet);\n\t    }\n    };\n    return <div className={className}>\n\t    {isRetweet && <div className={'mb-2'}>\n\t\t        <span className={'small text-muted'}>Retweet via <UserDisplay user={tweet.user} includeFullName={false} /> </span>\n\t        </div>\n\t    }\n\t    <div className={'d-flex col-8 col-offset-4'}>\n\t\t    <div className={''}>\n\t\t\t    <UserPicture user={tweet.user} />\n\t\t    </div>\n\t\t    <div className={'col-11'}>\n\t\t\t    <div>\n\n\t\t\t\t    <p>\n\t\t\t\t\t    <UserDisplay user={tweet.user} includeFullName={true} />\n\t\t\t\t    </p>\n\t\t            <p>{tweet.content}</p>\n\t\t\t\t     <ParentTweet tweet={tweet} retweeter={tweet.user}/>\n\t\t\t    </div>\n\t\t\t    <div className={'btn btn-group px-0'}>\n\t\t\t\t    {(actionTweet && !hideActions) && <React.Fragment>\n\t\t            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"like\", display:\"Like\"}}/>\n\t\t            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:\"Unlike\"}}/>\n\t\t            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"retweet\", display:\"Retweet\"}}/>\n\t\t\t\t    </React.Fragment> }\n\t\t\t\t    {isDetail === true ? null : <button onClick={handleLinkClick} className={'btn btn-outline-primary btn-sm'}>View</button>}\n\t\t        </div>\n\t\t    </div>\n\t    </div>\n    </div>\n}",
    "import React, {useEffect, useState} from \"react\";\nimport {apiTweetList} from \"./lookup\";\nimport {Tweet} from \"./detail\";\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([]);\n    const [tweets, setTweets] = useState([]);\n    const [nextUrl, setNextUrl] = useState(null);\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\n    useEffect(() => {\n    \tlet final = [...props.newTweet].concat(tweetsInit);\n    \tif (final.length !== tweets.length) {\n    \t\tsetTweets(final);\n\t    }\n    }, [props.newTweet, tweets.length, tweetsInit]);\n\n    useEffect(() => {\n    \tif (tweetsDidSet === false) {\n\t\t    const handleTweetListLookup = (response, status) => {\n\t\t\t    if (status === 200) {\n\t\t\t    \tsetNextUrl(response.next);\n\t\t\t\t    setTweetsInit(response.results);\n\t\t\t\t    setTweetsDidSet(true);\n\t\t\t    }\n\t\t    };\n\t\t    apiTweetList(props.username, handleTweetListLookup);\n\t    }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n    const handleRetweet = (newTweet) => {\n\t\tconst updateTweetsInit = [...tweetsInit];\n\t\tupdateTweetsInit.unshift(newTweet);\n\t\tsetTweetsInit(updateTweetsInit);\n\t\tconst updateFinalTweets = [...tweets];\n\t\tupdateFinalTweets.unshift(tweets);\n\t\tsetTweets(updateFinalTweets);\n\n    };\n\n    const handleLoadNext = (event) => {\n    \tevent.preventDefault();\n\t    const handleLoadNextResponse = (response, status) => {\n\t\t\tif (status === 200) {\n\t\t        setNextUrl(response.next);\n\t\t        const newTweets = [...tweets].concat(response.results);\n\t\t\t    setTweetsInit(newTweets);\n\t\t\t    setTweets(newTweets);\n\t\t    } else {\n\t\t\t\talert(\"There was an error!!!\");\n\t\t\t}\n\t    };\n\n\t    if (nextUrl !== null) {\n    \t\tapiTweetList(props.username, handleLoadNextResponse, nextUrl);\n\t    }\n    };\n\n    return <React.Fragment>\n\t    {tweets.map((item,index)=>{\n        return <Tweet tweet={item}\n                      didRetweet={handleRetweet}\n                      className='my-5 py-5 border bg-white text-dark'\n                      key={`${index}-{item.id}`}/>\n        })}\n\t    { nextUrl !== null && <button onClick={handleLoadNext} className={'btn btn-outline-primary btn-sm'}>Load Next</button>}\n\t    </React.Fragment>\n}",
    "import React from \"react\";\nimport {apiTweetCreate} from \"./lookup\";\n\nexport function TweetCreate(props) {\n\tconst textAreaRef = React.createRef();\n\tconst {didTweet} = props;\n\tconst handleBackendUpdate = (response, status) => {\n\t\tif (status === 201) {\n\t\t\tdidTweet(response);\n\t\t} else {\n\t\t\tconsole.log(response);\n\t\t}\n\t};\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst newValue = textAreaRef.current.value;\n\t\tapiTweetCreate(newValue, handleBackendUpdate);\n\t\ttextAreaRef.current.value = '';\n\t};\n\treturn <div className={props.className}>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<textarea ref={textAreaRef} required={true} className='form-control'>\n\t\t\t\t</textarea>\n\t\t\t\t<button type={\"submit\"} className='btn btn-primary my-3'>Tweet</button>\n\t\t\t</form>\n\t\t</div>\n}",
    "import React, {useEffect, useState} from \"react\";\nimport {Tweet} from \"./detail\";\nimport {apiTweetFeed} from \"./lookup\";\n\nexport function TweetsFeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([]);\n    const [tweets, setTweets] = useState([]);\n    const [nextUrl, setNextUrl] = useState(null);\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\n    useEffect(() => {\n    \tlet final = [...props.newTweet].concat(tweetsInit);\n    \tif (final.length !== tweets.length) {\n    \t\tsetTweets(final);\n\t    }\n    }, [props.newTweet, tweets.length, tweetsInit]);\n\n    useEffect(() => {\n    \tif (tweetsDidSet === false) {\n\t\t    const handleTweetListLookup = (response, status) => {\n\t\t\t    if (status === 200) {\n\t\t\t    \tsetNextUrl(response.next);\n\t\t\t\t    setTweetsInit(response.results);\n\t\t\t\t    setTweetsDidSet(true);\n\t\t\t    }\n\t\t    };\n\t\t    apiTweetFeed(handleTweetListLookup);\n\t    }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n    const handleRetweet = (newTweet) => {\n\t\tconst updateTweetsInit = [...tweetsInit];\n\t\tupdateTweetsInit.unshift(newTweet);\n\t\tsetTweetsInit(updateTweetsInit);\n\t\tconst updateFinalTweets = [...tweets];\n\t\tupdateFinalTweets.unshift(tweets);\n\t\tsetTweets(updateFinalTweets);\n\n    };\n\n    const handleLoadNext = (event) => {\n    \tevent.preventDefault();\n\t    const handleLoadNextResponse = (response, status) => {\n\t\t\tif (status === 200) {\n\t\t        setNextUrl(response.next);\n\t\t        const newTweets = [...tweets].concat(response.results);\n\t\t\t    setTweetsInit(newTweets);\n\t\t\t    setTweets(newTweets);\n\t\t    } else {\n\t\t\t\talert(\"There was an error!!!\");\n\t\t\t}\n\t    };\n\n\t    if (nextUrl !== null) {\n    \t\tapiTweetFeed(handleLoadNextResponse, nextUrl);\n\t    }\n    };\n\n    return <React.Fragment>\n\t    {tweets.map((item,index)=>{\n        return <Tweet tweet={item}\n                      didRetweet={handleRetweet}\n                      className='my-5 py-5 border bg-white text-dark'\n                      key={`${index}-{item.id}`}/>\n        })}\n\t    { nextUrl !== null && <button onClick={handleLoadNext} className={'btn btn-outline-primary btn-sm'}>Load Next</button>}\n\t    </React.Fragment>\n}",
    "import React, {useEffect, useState} from 'react'\nimport {TweetsList} from \"./list\";\nimport {TweetCreate} from \"./create\";\nimport {apiTweetDetail} from './lookup';\nimport {Tweet} from './detail'\nimport {TweetsFeedList} from './feed'\n\nexport function FeedComponent(props) {\n\tconst canTweet = true; //props.canTweet === \"false\" ? false : true;\n\tconst [newTweets, setNewTweets] = useState([]);\n\tfunction handleNewTweet(newTweet) {\n\t\tconsole.log('newTweet', newTweet);\n\t\tvar currentTweetList = [...newTweets];\n\t\tcurrentTweetList.unshift(newTweet);\n\t\tsetNewTweets(currentTweetList);\n\t}\n\treturn <div className={props.className}>\n\t\t{canTweet && <TweetCreate didTweet={handleNewTweet} className='col-md-12 mb-3' />}\n\t\t<TweetsFeedList newTweet={newTweets} {...props} />\n\t</div>\n}\n\n\nexport function TweetsComponent(props) {\n\tconst canTweet = props.canTweet !== \"false\";\n\tconst [newTweets, setNewTweets] = useState([]);\n\tconst handleNewTweet = (newTweet) => {\n\t\tlet currentTweetList = [...newTweets];\n\t\tcurrentTweetList.unshift(newTweet);\n\t\tsetNewTweets(currentTweetList);\n\t\t};\n\treturn <div className={props.className}>\n\t\t{canTweet && <TweetCreate didTweet={handleNewTweet} className='col-md-12 mb-3' />}\n\t\t<TweetsList newTweet={newTweets} {...props}/>\n\t</div>\n}\n\nexport function TweetDetailComponent(props) {\n\tconst {tweetId} = props;\n\tconst [didLookup, setDidLookup] = useState(false);\n\tconst [tweet, setTweet] = useState(null);\n\tconst handleBackendLookup = (response, status) => {\n\t\tif (status === 200) {\n\t\t\tsetTweet(response);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (didLookup === false) {\n\t\t\tapiTweetDetail(tweetId, handleBackendLookup);\n\t\t\tsetDidLookup(true);\n\t\t}\n\t}, [tweetId, didLookup, setDidLookup]);\n\n\treturn tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>\n}",
    "import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from \"./tweets\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <div>\n                   <TweetsComponent />\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ProfileBadgeComponent} from './profiles';\nimport {TweetsComponent, TweetDetailComponent, FeedComponent} from \"./tweets\";\nimport * as serviceWorker from './serviceWorker';\n\nconst rootEle = document.getElementById('root');\nif (rootEle) {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      rootEle\n    );\n}\n\nconst e = React.createElement;\nconst tweetmeEle = document.getElementById('tweetme');\nif (tweetmeEle) {\n    ReactDOM.render(\n        e(TweetsComponent, tweetmeEle.dataset), tweetmeEle\n    );\n}\n\nconst tweetmeFeedEle = document.getElementById('tweetme-feed');\nif (tweetmeFeedEle) {\n    ReactDOM.render(\n        e(FeedComponent, tweetmeFeedEle.dataset), tweetmeFeedEle\n    );\n}\n\nconst tweetDetailElements = document.querySelectorAll('.tweetme-detail');\ntweetDetailElements.forEach(container => {\n    ReactDOM.render(\n        e(TweetDetailComponent, container.dataset), container\n    );\n});\n\nconst profileBadgeElements = document.querySelectorAll('.tweetme-profile-badge');\nprofileBadgeElements.forEach(container => {\n    ReactDOM.render(\n        e(ProfileBadgeComponent, container.dataset), container\n    );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"
  ],
  "sourceRoot": ""
}